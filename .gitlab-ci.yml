stages:
  - test
  - integration
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375

cache:
  paths:
    - .cache/pip

test:
  stage: test
  image: python:3.11-slim
  before_script:
    - python -V
    - pip install --upgrade pip
    - pip install -r api/requirements.txt || true
    - pip install pytest pydantic requests
  script:
    - pytest
  artifacts:
    when: always
    reports:
      junit: junit.xml
    paths:
      - junit.xml

integration:
  stage: integration
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    OLLAMA_LLM: "llama3.1:8b"
    OLLAMA_EMBED: "nomic-embed-text"
  before_script:
    - apk add --no-cache bash docker-cli-compose curl jq
    - docker compose version
  script:
    - |
      set -euo pipefail
      docker compose -f docker-compose.yml up -d qdrant ollama-prepull
      # wait for pre-pull to finish; don't fail pipeline if it exits non-zero
      PREP=$(docker ps -q --filter name=ollama-prepull || true)
      if [ -n "$PREP" ]; then docker wait "$PREP" || true; fi
      docker compose -f docker-compose.yml up -d ollama
      # run just the import smoke test locally (no HTTP)
      docker run --rm -v "$CI_PROJECT_DIR:/work" -w /work --network host python:3.11-slim \
        bash -lc "pip install -r api/requirements.txt || true && pip install pytest && pytest tests/integration"
  after_script:
    - docker compose -f docker-compose.yml down -v
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_BRANCH == "main"

build-image:
  stage: build
  image: quay.io/containers/buildah:stable
  tags: ["test-runner"]
  variables:
    # Avoid user namespaces + overlay; run anywhere (slower but reliable)
    BUILDAH_ISOLATION: chroot
    STORAGE_DRIVER: vfs
    XDG_RUNTIME_DIR: /tmp/run
    HOME: /home/build
    DOCKER_CONFIG: /home/build/.docker   # for registry auth if needed
  before_script:
    - set -euo pipefail
    - mkdir -p "$XDG_RUNTIME_DIR" "$HOME" "$DOCKER_CONFIG"
    # (Optional) loose policy if your registry has custom TLS or mirrors
    - echo '{ "default": [{"type":"insecureAcceptAnything"}] }' >/etc/containers/policy.json
    - buildah --debug info || true
    - buildah version
    # GitLab registry login with job token (no extra secrets)
    - buildah login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
  script:
    # Build from ./api/Dockerfile; adjust path if different
    - buildah bud --isolation chroot --storage-driver vfs --layers -t "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHORT_SHA" ./api
    - buildah push "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHORT_SHA"
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        buildah tag "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY_IMAGE/api:latest"
        buildah push "$CI_REGISTRY_IMAGE/api:latest"
      fi

