stages:
  - test
  - integration
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375

cache:
  paths:
    - .cache/pip

test:
  stage: test
  image: python:3.11-slim
  before_script:
    - python -V
    - pip install --upgrade pip
    - pip install -r api/requirements.txt || true
    - pip install pytest pydantic requests
  script:
    - pytest
  artifacts:
    when: always
    reports:
      junit: junit.xml
    paths:
      - junit.xml

integration:
  stage: integration
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    OLLAMA_LLM: "llama3.1:8b"
    OLLAMA_EMBED: "nomic-embed-text"
  before_script:
    - apk add --no-cache bash docker-cli-compose curl jq
    - docker compose version
  script:
    - |
      set -euo pipefail
      docker compose -f docker-compose.yml up -d qdrant ollama-prepull
      # wait for pre-pull to finish; don't fail pipeline if it exits non-zero
      PREP=$(docker ps -q --filter name=ollama-prepull || true)
      if [ -n "$PREP" ]; then docker wait "$PREP" || true; fi
      docker compose -f docker-compose.yml up -d ollama
      # run just the import smoke test locally (no HTTP)
      docker run --rm -v "$CI_PROJECT_DIR:/work" -w /work --network host python:3.11-slim \
        bash -lc "pip install -r api/requirements.txt || true && pip install pytest && pytest tests/integration"
  after_script:
    - docker compose -f docker-compose.yml down -v
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_BRANCH == "main"

build-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]      # important, we need a shell
  tags:
    - test-runner         # your runner tag
  variables:
    DOCKER_CONFIG: /kaniko/.docker
  before_script:
    # Auth to GitLab Container Registry using the CI job token (no secrets needed)
    - mkdir -p /kaniko/.docker
    - printf '{"auths":{"%s":{"username":"gitlab-ci-token","password":"%s"}}}' "$CI_REGISTRY" "$CI_JOB_TOKEN" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
        --context "$CI_PROJECT_DIR/api"
        --dockerfile "$CI_PROJECT_DIR/api/Dockerfile"
        --destination "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHORT_SHA"
        --destination "$CI_REGISTRY_IMAGE/api:latest"
        --single-snapshot
        --use-new-run
        --compressed-caching=false
